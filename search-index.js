var searchIndex = new Map(JSON.parse('[\
["diffy",{"t":"FGPPPFFFPGPFFFFHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ApplyError","ConflictStyle","Context","Delete","Diff3","DiffOptions","Hunk","HunkRange","Insert","Line","Merge","MergeOptions","ParsePatchError","Patch","PatchFormatter","apply","apply_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_patch","create_patch","create_patch_bytes","create_patch_bytes","default","default","default","end","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_patch","from","from","from","from","from","from","from","from","from","from","from_bytes","from_str","function_context","hunks","into","into","into","into","into","into","into","into","into","into","is_empty","len","lines","merge","merge","merge_bytes","merge_bytes","modified","new","new","new","new_range","old_range","original","range","reverse","reverse","reverse","set_conflict_marker_length","set_conflict_style","set_context_len","start","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_color","write_patch_into"],"q":[[0,"diffy"],[162,"diffy::patch"],[163,"alloc::string"],[164,"diffy::apply"],[165,"core::result"],[166,"alloc::vec"],[167,"diffy::merge"],[168,"alloc::borrow"],[169,"core::marker"],[170,"diffy::diff"],[171,"diffy::patch::format"],[172,"core::cmp"],[173,"core::fmt"],[174,"diffy::patch::parse"],[175,"core::option"],[176,"core::ops::range"],[177,"core::convert"],[178,"core::any"],[179,"std::io::error"],[180,"std::io"]],"i":[0,0,14,14,9,0,0,0,14,0,9,0,0,0,0,0,0,4,16,9,17,18,24,2,12,13,14,4,16,9,17,18,24,2,12,13,14,9,2,12,13,14,9,2,12,13,14,0,16,0,16,16,17,18,13,2,12,13,14,4,4,16,9,17,18,24,24,2,2,12,13,13,14,18,4,16,9,17,18,24,2,12,13,14,2,2,12,2,4,16,9,17,18,24,2,12,13,14,13,13,12,0,17,0,17,2,16,17,18,12,12,2,13,2,12,14,17,17,16,13,2,9,2,12,13,14,4,24,2,13,4,16,9,17,18,24,2,12,13,14,4,16,9,17,18,24,2,12,13,14,4,16,9,17,18,24,2,12,13,14,18,18],"f":"```````````````{{b{d{b}}}{{j{fh}}}}{{{n{l}}{d{{n{l}}}}}{{j{{A`{l}}h}}}}{ce{}{}}0000000000000000000{AbAb}{{{d{c}}}{{d{c}}}{AdAf}}{{{Ah{c}}}{{Ah{c}}}Af}{AjAj}{{{Al{c}}}{{Al{c}}}Af}{{ce}An{}{}}0000{{bb}{{d{b}}}}{{B`bb}{{d{b}}}}{{{n{l}}{n{l}}}{{d{{n{l}}}}}}{{B`{n{l}}{n{l}}}{{d{{n{l}}}}}}{{}B`}{{}Bb}{{}Bd}{AjBf}{{{d{c}}{d{c}}}Bh{BjAdAf}}{{{Ah{c}}{Ah{c}}}Bh{BjAf}}{{AjAj}Bh}{{{Al{c}}{Al{c}}}Bh{BjAf}}{{hBl}Bn}0{{B`Bl}Bn}{{AbBl}Bn}{{BbBl}Bn}{{BdBl}Bn}{{C`Bl}Bn}0{{{d{e}}Bl}Bn{}{{Ad{}{{Cb{c}}}}CdAf}}{{{d{b}}Bl}Bn}{{{Ah{c}}Bl}Bn{CdAf}}{{AjBl}Bn}0{{{Al{c}}Bl}Bn{CdAf}}{{Bd{d{b}}}{{`{Cf}}}}{cc{}}000000000{{{n{l}}}{{j{{d{{n{l}}}}C`}}}}{b{{j{{d{b}}C`}}}}{{{Ah{c}}}{{Ch{c}}}Af}{{{d{c}}}{{n{{Ah{c}}}}}{AdAf}}{ce{}{}}000000000{AjBh}{AjBf}{{{Ah{c}}}{{n{{Al{c}}}}}Af}{{bbb}{{j{ff}}}}{{Bbbbb}{{j{ff}}}}{{{n{l}}{n{l}}{n{l}}}{{j{{A`{l}}{A`{l}}}}}}{{Bb{n{l}}{n{l}}{n{l}}}{{j{{A`{l}}{A`{l}}}}}}{{{d{c}}}{{Ch{c}}}{AdAf}}{{}B`}{{}Bb}{{}Bd}{{{Ah{c}}}AjAf}04{Aj{{Cj{Bf}}}}{{{d{c}}}{{d{c}}}{AdAf}}{{{Ah{c}}}{{Ah{c}}}Af}{{{Al{c}}}{{Al{c}}}Af}{{BbBf}Bb}{{BbAb}Bb}{{B`Bf}B`}{AjBf}{{{d{c}}}{{A`{l}}}{{Cl{{n{l}}}}AdAf}}{ce{}{}}0000{cf{}}000{c{{j{e}}}{}{}}0000000000000000000{cCn{}}000000000{BdBd}{{Bd{d{c}}e}{{D`{An}}}{Ad{Cl{{n{l}}}}Af}Db}","D":"Hl","p":[[1,"str"],[5,"Patch",0,162],[5,"String",163],[5,"ApplyError",0,164],[6,"Result",165],[1,"u8"],[1,"slice"],[5,"Vec",166],[6,"ConflictStyle",0,167],[10,"ToOwned",168],[10,"Sized",169],[5,"Hunk",0,162],[5,"HunkRange",0,162],[6,"Line",0,162],[1,"unit"],[5,"DiffOptions",0,170],[5,"MergeOptions",0,167],[5,"PatchFormatter",0,171],[1,"usize"],[1,"bool"],[10,"PartialEq",172],[5,"Formatter",173],[8,"Result",173],[5,"ParsePatchError",0,174],[17,"Owned"],[10,"Debug",173],[10,"Display",173],[6,"Option",175],[5,"Range",176],[10,"AsRef",177],[5,"TypeId",178],[8,"Result",179],[10,"Write",180]],"r":[[0,164],[1,167],[5,170],[6,162],[7,162],[9,162],[11,167],[12,174],[13,162],[14,171],[15,164],[16,164],[47,170],[49,170],[101,167],[103,167]],"b":[[59,"impl-Display-for-ApplyError"],[60,"impl-Debug-for-ApplyError"],[65,"impl-Debug-for-ParsePatchError"],[66,"impl-Display-for-ParsePatchError"],[67,"impl-Debug-for-Patch%3C\'_,+T%3E"],[68,"impl-Display-for-Patch%3C\'_,+str%3E"],[70,"impl-Debug-for-HunkRange"],[71,"impl-Display-for-HunkRange"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFwABwASAB0ANAACADgAEQByAAAAdAAAAHoAJgCiAAAA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
